---
swagger: "2.0"
info:
  description: "This is documentation for our REST api for mandatory exercise 1 in\
    \ the distributed systems course"
  version: "1.0.1Â½"
  title: "ITU REST API"
host: "rest.itu.dk"
basePath: "/v2"
tags:
- name: "student"
  description: "Student at ITU"
- name: "course"
  description: "Course at ITU"
- name: "teacher"
  description: "Teacher at ITU"
schemes:
- "https"
- "http"
paths:
  /student:
    post:
      tags:
      - "student"
      summary: "Add a new student to the store"
      description: ""
      operationId: "addStudent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Student object that needs to be added to the school"
        required: true
        schema:
          $ref: "#/definitions/Student"
        x-exportParamName: "Body"
      responses:
        "405":
          description: "Invalid input"
      security:
      - school_auth:
        - "write:students"
        - "read:students"
    put:
      tags:
      - "student"
      summary: "Update an existing student"
      description: ""
      operationId: "updateStudent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Student object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Student"
        x-exportParamName: "Body"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Student not found"
        "405":
          description: "Validation exception"
      security:
      - school_auth:
        - "write:students"
        - "read:students"
  /student/{studentId}:
    get:
      tags:
      - "student"
      summary: "Find student by ID"
      description: "Returns a single student"
      operationId: "getStudentById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "studentId"
        in: "path"
        description: "ID of student to return"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StudentId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Student"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "student not found"
      security:
      - api_key: []
    post:
      tags:
      - "student"
      summary: "Updates a student using specific ID"
      description: ""
      operationId: "updateStudentWithId"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "studentId"
        in: "path"
        description: "ID of student that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StudentId"
      - in: "body"
        name: "body"
        description: "order placed for purchasing the student"
        required: true
        schema:
          $ref: "#/definitions/Student"
        x-exportParamName: "Body"
      responses:
        "405":
          description: "Invalid input"
      security:
      - school_auth:
        - "write:students"
        - "read:students"
    delete:
      tags:
      - "student"
      summary: "Deletes a student"
      description: ""
      operationId: "deleteStudent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "ApiKey"
        x-optionalDataType: "String"
      - name: "studentId"
        in: "path"
        description: "student id to delete"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StudentId"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "student not found"
      security:
      - school_auth:
        - "write:students"
        - "read:students"
  /course:
    post:
      tags:
      - "course"
      summary: "Add a new course to the store"
      description: ""
      operationId: "addCourse"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Course object that needs to be added to the school"
        required: true
        schema:
          $ref: "#/definitions/Course"
        x-exportParamName: "Body"
      responses:
        "405":
          description: "Invalid input"
      security:
      - school_auth:
        - "write:courses"
        - "read:courses"
    put:
      tags:
      - "course"
      summary: "Update an existing course"
      description: ""
      operationId: "updateCourse"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Course object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Course"
        x-exportParamName: "Body"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
        "405":
          description: "Validation exception"
      security:
      - school_auth:
        - "write:courses"
        - "read:courses"
  /course/{courseId}:
    get:
      tags:
      - "course"
      summary: "Find course by ID"
      description: "Returns a single course"
      operationId: "getCourseById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "courseId"
        in: "path"
        description: "ID of course to return"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CourseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Course"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "course not found"
      security:
      - api_key: []
    post:
      tags:
      - "course"
      summary: "Updates a course using specific ID"
      description: ""
      operationId: "updateCourseWithId"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "courseId"
        in: "path"
        description: "ID of course that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CourseId"
      - in: "body"
        name: "body"
        description: "order placed for purchasing the course"
        required: true
        schema:
          $ref: "#/definitions/Course"
        x-exportParamName: "Body"
      responses:
        "405":
          description: "Invalid input"
      security:
      - school_auth:
        - "write:courses"
        - "read:courses"
    delete:
      tags:
      - "course"
      summary: "Deletes a course"
      description: ""
      operationId: "deleteCourse"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "ApiKey"
        x-optionalDataType: "String"
      - name: "courseId"
        in: "path"
        description: "course id to delete"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CourseId"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
      security:
      - school_auth:
        - "write:courses"
        - "read:courses"
  /course/{courseId}/rating/{rating}:
    put:
      tags:
      - "course"
      summary: "Set rating for a specific course"
      description: ""
      operationId: "rateCourse"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "courseId"
        in: "path"
        description: "ID of course to rate"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CourseId"
      - name: "rating"
        in: "path"
        description: "Rating for the course"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "Rating"
      responses:
        "400":
          description: "Invalid course ID supplied"
        "404":
          description: "Course not found"
      security:
      - school_auth:
        - "write:courses"
        - "read:courses"
  /course/{courseId}/enroll/{studentId}:
    put:
      tags:
      - "course"
      summary: "Enroll student to a specific course"
      description: ""
      operationId: "enrollStudent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "courseId"
        in: "path"
        description: "ID of course to enroll student in"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "CourseId"
      - name: "studentId"
        in: "path"
        description: "ID of student to enroll"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "StudentId"
      responses:
        "400":
          description: "Invalid course or student ID supplied"
        "404":
          description: "Course not found"
      security:
      - school_auth:
        - "write:courses"
        - "read:courses"
  /teacher:
    post:
      tags:
      - "teacher"
      summary: "Add a new teacher to the store"
      description: ""
      operationId: "addTeacher"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Teacher object that needs to be added to the school"
        required: true
        schema:
          $ref: "#/definitions/Teacher"
        x-exportParamName: "Body"
      responses:
        "405":
          description: "Invalid input"
      security:
      - school_auth:
        - "write:teachers"
        - "read:teachers"
    put:
      tags:
      - "teacher"
      summary: "Update an existing teacher"
      description: ""
      operationId: "updateTeacher"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Teacher object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Teacher"
        x-exportParamName: "Body"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Teacher not found"
        "405":
          description: "Validation exception"
      security:
      - school_auth:
        - "write:teachers"
        - "read:teachers"
  /teacher/{teacherId}:
    get:
      tags:
      - "teacher"
      summary: "Find teacher by ID"
      description: "Returns a single teacher"
      operationId: "getTeacherById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "teacherId"
        in: "path"
        description: "ID of teacher to return"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TeacherId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Teacher"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "teacher not found"
      security:
      - api_key: []
    post:
      tags:
      - "teacher"
      summary: "Updates a teacher using specific ID"
      description: ""
      operationId: "updateTeacherWithId"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "teacherId"
        in: "path"
        description: "ID of teacher that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TeacherId"
      - in: "body"
        name: "body"
        description: "order placed for purchasing the teacher"
        required: true
        schema:
          $ref: "#/definitions/Teacher"
        x-exportParamName: "Body"
      responses:
        "405":
          description: "Invalid input"
      security:
      - school_auth:
        - "write:teachers"
        - "read:teachers"
    delete:
      tags:
      - "teacher"
      summary: "Deletes a teacher"
      description: ""
      operationId: "deleteTeacher"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "ApiKey"
        x-optionalDataType: "String"
      - name: "teacherId"
        in: "path"
        description: "teacher id to delete"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TeacherId"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "teacher not found"
      security:
      - school_auth:
        - "write:teachers"
        - "read:teachers"
  /teacher/{teacherId}/score/{score}:
    put:
      tags:
      - "teacher"
      summary: "Set score for a specific teacher"
      description: ""
      operationId: "scoreTeacher"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "teacherId"
        in: "path"
        description: "ID of teacher to score"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TeacherId"
      - name: "score"
        in: "path"
        description: "Score for the teacher"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "Score"
      responses:
        "400":
          description: "Invalid teacher ID supplied"
        "404":
          description: "Course not found"
      security:
      - school_auth:
        - "write:teachers"
        - "read:teachers"
securityDefinitions:
  school_auth:
    type: "oauth2"
    authorizationUrl: "http://studentstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:students: "modify students in your account"
      read:students: "read your students"
      write:courses: "modify courses in your account"
      read:courses: "read your courses"
      write:teachers: "modify teachers in your account"
      read:teachers: "read your teachers"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Course:
    type: "object"
    required:
    - "ects"
    - "id"
    - "name"
    - "teacherID"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Lasse 101"
      ects:
        type: "number"
      teacherID:
        type: "integer"
        format: "int64"
      rating:
        type: "integer"
        format: "int64"
      students:
        type: "array"
        xml:
          name: "Student"
          wrapped: true
        items:
          $ref: "#/definitions/Student"
    xml:
      name: "Course"
    example:
      ects: 6.02745618307040320615897144307382404804229736328125
      teacherID: 1
      name: "Lasse 101"
      rating: 5
      students:
      - name: "Mere Lasse"
        id: 0
      - name: "Mere Lasse"
        id: 0
      id: 0
  Teacher:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Teacher Lasse"
      score:
        type: "integer"
        format: "int64"
    xml:
      name: "Teacher"
    example:
      score: 6
      name: "Teacher Lasse"
      id: 0
  Student:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Mere Lasse"
    xml:
      name: "Course"
    example:
      name: "Mere Lasse"
      id: 0
externalDocs:
  description: "Find out more about ITU"
  url: "http://itu.dk"
